<?php

/*
 * This file is licensed under GPLv2+.
*/

function _cert_issue_get_status_text($status) {
	switch($status) {
		case 0:
			return t('Normal');
		case 1:
			return t('Under approved');
		default:
			return t('Unknown');
	}
}

/**
 * Implementation of hook_permission().
 */
function cert_issue_permission() {
	return array(
		'preload certificates' => array(
			'title' => t('Upload Massive certificates already issued'),
		),
		'claim certificates' => array(
			'title' => t('Claim already issued certificates'),
		),
	);
}

/**
 * Implementation of hook_menu().
 */
function cert_issue_menu() {
	$items=array();
	$items['certificate/massiveupload'] = array(
		'title' => 'Upload Massive certificates already issued',
		'weight' => 3,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('cert_issue_massiveupload_form'),
		'access callback' => 'user_access',
		'access arguments'=> array('preload certificates'),
	);
	$items['user/certs'] = array(
		'title' => 'My certificates',
		'menu_name' => 'user-menu',
		'plid' => '0',
		'weight' => -10,
		'page callback' => 'cert_issue_user_certs_page',
		'access callback' => 'cert_issue_user_certs_page_access',
	);
	$items['user/claim'] = array(
		'title' => 'Claim already issued certificates',
		'menu_name' => 'user-menu',
		'plid' => '0',
		'weight' => -9,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('cert_issue_user_claim_form'),
		'access callback' => 'cert_issue_user_claim_access',
	);
	return $items;
}

function cert_issue_massiveupload_form($form, $form_state) {
	return array();
}

function cert_issue_user_certs_page_access() {
	$user=$GLOBALS['user'];
	if(student_load($user)) {
		return db_select('certificates_issues','ci')->fields('ci')->condition('ci.claimedby',$user->uid)
			->countQuery()->execute()->fetchField();
	} else return FALSE;
}

function cert_issue_user_certs_page() {
	$user=$GLOBALS['user'];
	$query=db_select('certificates_issues','ci')
		->condition('ci.claimedby',$user->uid)
		->fields('ci',array('certid','issuedate','status'));
	$query->innerJoin('certificates_operations','co','co.coid=ci.coid');
	$query->innerJoin('operations','o','co.oid=o.oid');
	$query->innerJoin('certificates','c','co.cid=c.cid');
	$query->addExpression('o.name','oname');
	$query->addExpression('c.name','cname');
	$query->fields('c',array('series'));
	$header=array(
		array('data'=>t('Orgnizations series'),'field'=>'o.oid'),
		array('data'=>t('Series'), 'field'=>'c.series'),
		array('data'=>t('Specification name')),
		array('data'=>t('Certificate no'), 'field'=>'ci.certid'),
		array('data'=>t('Status'), 'field'=>'ci.status'),
	);
	$rows=array();
	$query->extend('TableSort')->orderByHeader($header)->extend('PagerDefault')->limit(20);
	$output = '';
	$rdbo=$query->execute();
	foreach($rdbo as $r) {
		$rows[]=array(
			$r->oname,
			$r->series,
			$r->cname,
			$r->certid,
			_cert_issue_get_status_text($r->status),
		);
	}
	$output .= theme('table', array('header'=>$header, 'rows'=>$rows));
	$output .= theme('pager');

	if(cert_issue_user_claim_access())
		$output .= '<div>'.l(t('Want claim more certificates?'), 'user/claim').'</div>';
	return $output;
}

function cert_issue_user_claim_access() {
	$user=$GLOBALS['user'];
	if(isset($user->uid) && $user->uid) {
		$student=student_load($user);
		if(!$student) return FALSE;
		$query=db_select('certificates_issues','ci')
			->condition('ci.claimedby',0)
			->condition('ci.gender',$student->gender)
			->fields('ci');
		if($student->exname) {
			$condition=db_or()->condition('ci.name',$student->name)->condition('ci.name',$student->exname);
			$query->condition($condition);
			unset($condition);
		} else
			$query->condition('ci.name',$student->name);
		$query->condition('ci.date_of_birth',substr($student->date_of_birth,0,6));
		$query->innerJoin('certificates_operations','co','co.coid=ci.coid');
		$query->innerJoin('operations','o','co.oid=o.oid');
		$query->innerJoin('certificates','c','co.cid=c.cid');
		return $query->countQuery()->execute()->fetchField();
	} else return FALSE;
}

function cert_issue_user_claim_form($form, $form_state) {
	$student=student_load($GLOBALS['user']);
	$form=array();
	$form['description']=array(
		'#markup' => t('Please select the certificate you wan to claim. ').
			t('If your certificates is not listed here, please contact us.').'<br/>'.
			t('Tip: if you have changed your name in the pass, please put it down at !url, so that we could make it recognized.',
				array('!url'=>l(t('here'), 'user/'.$student->uid.'/edit'))),
	);
	$header=array(
		t('Orgnizations series'),
		t('Specification name'),
		t('Certificate no'),
		t('True name'),
		t('Birth date'),
	);
	$query=db_select('certificates_issues','ci')
		->condition('ci.claimedby',0)
		->condition('ci.gender',$student->gender)
		->fields('ci',array('ciid','certid','name','date_of_birth'));
	if($student->exname) {
		$condition=db_or()->condition('ci.name',$student->name)->condition('ci.name',$student->exname);
		$query->condition($condition);
		unset($condition);
	} else
		$query->condition('ci.name',$student->name);
	$query->condition('ci.date_of_birth',substr($student->date_of_birth,0,6));
	$query->innerJoin('certificates_operations','co','co.coid=ci.coid');
	$query->innerJoin('operations','o','co.oid=o.oid');
	$query->innerJoin('certificates','c','co.cid=c.cid');
	$query->addExpression('o.name','oname');
	$query->addExpression('c.name','cname');
	$query->fields('c',array('series'));
	$query->orderBy('o.year')->orderBy('o.oid')->orderBy('c.cid');

	$rows=array();
	$rdbo=$query->execute();
	foreach($rdbo as $r) {
		$rows[$r->ciid]=array(
			$r->oname,
			$r->cname,
			$r->certid,
			$r->name,
			$r->date_of_birth,
		);
	}
	$form['certs']=array(
		'#type' => 'tableselect',
		'#header' => $header,
		'#options' => $rows,
		'#required' => empty($rows),
		'#empty' => t('No available certificates for you to claim.'),
	);
	if(!empty($rows))
		$form['claim']=array(
			'#type' => 'submit',
			'#value' => t('Claim selected certificates & Proceed'),
		);
	return $form;
}

function cert_issue_user_claim_form_submit($form, &$form_state) {
	$certs=array_keys(array_filter($form_state['values']['certs']));
	$i=0;
	foreach($certs as $cert) {
		$i+=db_update('certificates_issues')->condition('claimedby',0)->condition('ciid',$cert)->fields(array(
			'claimedby' => $GLOBALS['user']->uid,
		))->execute();
	}
	if($i)
		drupal_set_message(t('You claimed !num certificates.', array('!num'=>$i)));
	if(!cert_issue_user_claim_access())
		$form_state['redirect']='user/certs';
}
?>
